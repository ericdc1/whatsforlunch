@using System.Collections
@using System.Text
@model SortedList

@functions{

    public string Calendar(DateTime dateToShow, SortedList datesSortedList)
    {
        System.Globalization.DateTimeFormatInfo cinfo = System.Globalization.DateTimeFormatInfo.CurrentInfo;
        StringBuilder sb = new StringBuilder();
        DateTime date = new DateTime(dateToShow.Year, dateToShow.Month, 1);
        int emptyCells = (Convert.ToInt32(date.DayOfWeek) + 7 - Convert.ToInt32(cinfo.FirstDayOfWeek)) % 7;
        int days = DateTime.DaysInMonth(dateToShow.Year, dateToShow.Month);
        string pmonth = "<span class=\"NextPrevMonth\" style=\"cursor:pointer;\" onclick=\"loadCalendar('" + date.AddMonths(-1) + "')\">&lt;</span>&nbsp;";
        string nmonth = "&nbsp;<span class=\"NextPrevMonth\" style=\"cursor:pointer;\" onclick=\"loadCalendar('" + date.AddMonths(1) + "')\">&gt;</span>";
        sb.Append("<div class='ContentCalendar'><div class='ContentHeader'>" + pmonth + cinfo.MonthNames[date.Month - 1] + " " + Convert.ToString(dateToShow.Year) + nmonth + "</div><div class='CalendarDaysRow'><div class='Label'>Su</div><div class='Label'>Mo</div><div class='Label'>Tu</div><div class='Label'>We</div><div class='Label'>Th</div><div class='Label'>Fr</div><div class='Label'>Sa</div></div>");
        for (int i = 0; i <= ((days + emptyCells) > 35 ? 42 : 35) - 1; i++)
        {
            if (i % 7 == 0)
            {
                if (i > 0)
                {
                    sb.Append("</div>");
                }
                sb.Append("<div class='CalendarRow'>");
            }

            if (i < emptyCells || i >= emptyCells + days)
            {
                sb.Append("<div class='EmptyDay'></div>");
            }
            else
            {
                if (datesSortedList.ContainsKey(date))
                {

                    sb.Append("<div class='Day On'><a class='ContentCalendarDay' data-date='" + date + "' data-url='removedate/?selecteddate=" + date + "'>" + date.Day + "</a></div>");
                }
                else
                {
                    sb.Append("<div class='Day Off'><a  class='ContentCalendarDay' data-date='" + date + "' data-url='adddate/?selecteddate=" + date + "'>" + date.Day + "</a></div>");
                }
                date = date.AddDays(1);
            }
        }
        sb.Append("</div>");

        return sb.ToString();
    }

    }

@Html.Raw(Calendar(ViewBag.selecteddate, Model))


<script>
    $(".ContentCalendarDay").click(function () {
        var url = @Url.Content("~/holidays/") + $(this).attr('data-url');
        var parentcontainer = $(this).parent();
        $.ajax({
            type:'POST',
            url: url,
            success: function (data) {
                console.log(data);
                if (parentcontainer.hasClass('On')) {
                    parentcontainer.removeClass('On').addClass('Off');
                }
                else {
                    parentcontainer.removeClass('Off').addClass('On');
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(xhr.status + ' ' + thrownError);
            }
        });
    });
</script>



